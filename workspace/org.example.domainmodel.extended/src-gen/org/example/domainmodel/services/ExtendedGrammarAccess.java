/*
* generated by Xtext
*/
package org.example.domainmodel.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ExtendedGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class DomainmodelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Domainmodel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNomeProjAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNomeProjSTRINGTerminalRuleCall_1_0 = (RuleCall)cNomeProjAssignment_1.eContents().get(0);
		private final Keyword cBeginKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cElementsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cElementsAbstractElementParserRuleCall_3_0 = (RuleCall)cElementsAssignment_3.eContents().get(0);
		private final Keyword cEndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Domainmodel:
		//	"project" nomeProj=STRING "begin" elements+=AbstractElement* "end";
		public ParserRule getRule() { return rule; }

		//"project" nomeProj=STRING "begin" elements+=AbstractElement* "end"
		public Group getGroup() { return cGroup; }

		//"project"
		public Keyword getProjectKeyword_0() { return cProjectKeyword_0; }

		//nomeProj=STRING
		public Assignment getNomeProjAssignment_1() { return cNomeProjAssignment_1; }

		//STRING
		public RuleCall getNomeProjSTRINGTerminalRuleCall_1_0() { return cNomeProjSTRINGTerminalRuleCall_1_0; }

		//"begin"
		public Keyword getBeginKeyword_2() { return cBeginKeyword_2; }

		//elements+=AbstractElement*
		public Assignment getElementsAssignment_3() { return cElementsAssignment_3; }

		//AbstractElement
		public RuleCall getElementsAbstractElementParserRuleCall_3_0() { return cElementsAbstractElementParserRuleCall_3_0; }

		//"end"
		public Keyword getEndKeyword_4() { return cEndKeyword_4; }
	}

	public class PackageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cElementsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cElementsAbstractElementParserRuleCall_3_0 = (RuleCall)cElementsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PackageDeclaration:
		//	"package" name=QualifiedName "{" elements+=AbstractElement* "}";
		public ParserRule getRule() { return rule; }

		//"package" name=QualifiedName "{" elements+=AbstractElement* "}"
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//elements+=AbstractElement*
		public Assignment getElementsAssignment_3() { return cElementsAssignment_3; }

		//AbstractElement
		public RuleCall getElementsAbstractElementParserRuleCall_3_0() { return cElementsAbstractElementParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class AbstractElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPackageDeclarationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEntityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cImportParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cFormTypesParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//AbstractElement:
		//	PackageDeclaration | Entity | Import | Page | FormTypes;
		public ParserRule getRule() { return rule; }

		//PackageDeclaration | Entity | Import | Page | FormTypes
		public Alternatives getAlternatives() { return cAlternatives; }

		//PackageDeclaration
		public RuleCall getPackageDeclarationParserRuleCall_0() { return cPackageDeclarationParserRuleCall_0; }

		//Entity
		public RuleCall getEntityParserRuleCall_1() { return cEntityParserRuleCall_1; }

		//Import
		public RuleCall getImportParserRuleCall_2() { return cImportParserRuleCall_2; }

		//Page
		public RuleCall getPageParserRuleCall_3() { return cPageParserRuleCall_3; }

		//FormTypes
		public RuleCall getFormTypesParserRuleCall_4() { return cFormTypesParserRuleCall_4; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0 = (RuleCall)cImportedNamespaceAssignment_1.eContents().get(0);
		
		//Import:
		//	"import" importedNamespace=QualifiedNameWithWildcard;
		public ParserRule getRule() { return rule; }

		//"import" importedNamespace=QualifiedNameWithWildcard
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importedNamespace=QualifiedNameWithWildcard
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }

		//QualifiedNameWithWildcard
		public RuleCall getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0() { return cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0; }
	}

	public class QualifiedNameWithWildcardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedNameWithWildcard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//QualifiedNameWithWildcard:
		//	QualifiedName ".*"?;
		public ParserRule getRule() { return rule; }

		//QualifiedName ".*"?
		public Group getGroup() { return cGroup; }

		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }

		//".*"?
		public Keyword getFullStopAsteriskKeyword_1() { return cFullStopAsteriskKeyword_1; }
	}

	public class AbstractTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEntityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractType:
		//	DataType | Entity;
		public ParserRule getRule() { return rule; }

		//DataType | Entity
		public Alternatives getAlternatives() { return cAlternatives; }

		//DataType
		public RuleCall getDataTypeParserRuleCall_0() { return cDataTypeParserRuleCall_0; }

		//Entity
		public RuleCall getEntityParserRuleCall_1() { return cEntityParserRuleCall_1; }
	}

	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataType");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cNameAlternatives_0 = (Alternatives)cNameAssignment.eContents().get(0);
		private final Keyword cNameStringKeyword_0_0 = (Keyword)cNameAlternatives_0.eContents().get(0);
		private final Keyword cNameIntKeyword_0_1 = (Keyword)cNameAlternatives_0.eContents().get(1);
		private final Keyword cNameFloatKeyword_0_2 = (Keyword)cNameAlternatives_0.eContents().get(2);
		private final Keyword cNameCurrencyKeyword_0_3 = (Keyword)cNameAlternatives_0.eContents().get(3);
		private final Keyword cNameDateKeyword_0_4 = (Keyword)cNameAlternatives_0.eContents().get(4);
		private final Keyword cNameTimeKeyword_0_5 = (Keyword)cNameAlternatives_0.eContents().get(5);
		private final Keyword cNameBooleanKeyword_0_6 = (Keyword)cNameAlternatives_0.eContents().get(6);
		
		//DataType:
		//	name=("string" | "int" | "float" | "currency" | "date" | "time" | "boolean");
		public ParserRule getRule() { return rule; }

		//name=("string" | "int" | "float" | "currency" | "date" | "time" | "boolean")
		public Assignment getNameAssignment() { return cNameAssignment; }

		//"string" | "int" | "float" | "currency" | "date" | "time" | "boolean"
		public Alternatives getNameAlternatives_0() { return cNameAlternatives_0; }

		//"string"
		public Keyword getNameStringKeyword_0_0() { return cNameStringKeyword_0_0; }

		//"int"
		public Keyword getNameIntKeyword_0_1() { return cNameIntKeyword_0_1; }

		//"float"
		public Keyword getNameFloatKeyword_0_2() { return cNameFloatKeyword_0_2; }

		//"currency"
		public Keyword getNameCurrencyKeyword_0_3() { return cNameCurrencyKeyword_0_3; }

		//"date"
		public Keyword getNameDateKeyword_0_4() { return cNameDateKeyword_0_4; }

		//"time"
		public Keyword getNameTimeKeyword_0_5() { return cNameTimeKeyword_0_5; }

		//"boolean"
		public Keyword getNameBooleanKeyword_0_6() { return cNameBooleanKeyword_0_6; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperTypeEntityCrossReference_2_1_0 = (CrossReference)cSuperTypeAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperTypeEntityQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cSuperTypeEntityCrossReference_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFeaturesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFeaturesFeatureParserRuleCall_4_0 = (RuleCall)cFeaturesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Entity:
		//	"entity" name=ID ("extends" superType=[Entity|QualifiedName])? "{" features+=Feature* "}";
		public ParserRule getRule() { return rule; }

		//"entity" name=ID ("extends" superType=[Entity|QualifiedName])? "{" features+=Feature* "}"
		public Group getGroup() { return cGroup; }

		//"entity"
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("extends" superType=[Entity|QualifiedName])?
		public Group getGroup_2() { return cGroup_2; }

		//"extends"
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }

		//superType=[Entity|QualifiedName]
		public Assignment getSuperTypeAssignment_2_1() { return cSuperTypeAssignment_2_1; }

		//[Entity|QualifiedName]
		public CrossReference getSuperTypeEntityCrossReference_2_1_0() { return cSuperTypeEntityCrossReference_2_1_0; }

		//QualifiedName
		public RuleCall getSuperTypeEntityQualifiedNameParserRuleCall_2_1_0_1() { return cSuperTypeEntityQualifiedNameParserRuleCall_2_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//features+=Feature*
		public Assignment getFeaturesAssignment_4() { return cFeaturesAssignment_4; }

		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_4_0() { return cFeaturesFeatureParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Feature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cMinAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cMinINTTerminalRuleCall_0_0_0 = (RuleCall)cMinAssignment_0_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cMaxAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cMaxINTTerminalRuleCall_0_2_0 = (RuleCall)cMaxAssignment_0_2.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeAbstractTypeParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//Feature:
		//	(min=INT ".." max=INT)? name=ID ":" type=AbstractType;
		public ParserRule getRule() { return rule; }

		//(min=INT ".." max=INT)? name=ID ":" type=AbstractType
		public Group getGroup() { return cGroup; }

		//(min=INT ".." max=INT)?
		public Group getGroup_0() { return cGroup_0; }

		//min=INT
		public Assignment getMinAssignment_0_0() { return cMinAssignment_0_0; }

		//INT
		public RuleCall getMinINTTerminalRuleCall_0_0_0() { return cMinINTTerminalRuleCall_0_0_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_0_1() { return cFullStopFullStopKeyword_0_1; }

		//max=INT
		public Assignment getMaxAssignment_0_2() { return cMaxAssignment_0_2; }

		//INT
		public RuleCall getMaxINTTerminalRuleCall_0_2_0() { return cMaxINTTerminalRuleCall_0_2_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=AbstractType
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//AbstractType
		public RuleCall getTypeAbstractTypeParserRuleCall_3_0() { return cTypeAbstractTypeParserRuleCall_3_0; }
	}

	public class BooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Boolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//Boolean:
		//	"true" | "false";
		public ParserRule getRule() { return rule; }

		//"true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }

		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}

	public class PageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Page");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTitleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cTitleAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cTitleSTRINGTerminalRuleCall_3_2_0 = (RuleCall)cTitleAssignment_3_2.eContents().get(0);
		private final Keyword cHeaderKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cHeaderAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cHeaderBooleanParserRuleCall_6_0 = (RuleCall)cHeaderAssignment_6.eContents().get(0);
		private final Keyword cFooterKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cFooterAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cFooterBooleanParserRuleCall_9_0 = (RuleCall)cFooterAssignment_9.eContents().get(0);
		private final Assignment cFormsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cFormsFormTypesCrossReference_10_0 = (CrossReference)cFormsAssignment_10.eContents().get(0);
		private final RuleCall cFormsFormTypesIDTerminalRuleCall_10_0_1 = (RuleCall)cFormsFormTypesCrossReference_10_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Page:
		//	"page" name=ID "{" ("title" ":" title=STRING)? "header" ":" header=Boolean "footer" ":" footer=Boolean
		//	forms+=[FormTypes]* "}";
		public ParserRule getRule() { return rule; }

		//"page" name=ID "{" ("title" ":" title=STRING)? "header" ":" header=Boolean "footer" ":" footer=Boolean
		//forms+=[FormTypes]* "}"
		public Group getGroup() { return cGroup; }

		//"page"
		public Keyword getPageKeyword_0() { return cPageKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("title" ":" title=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"title"
		public Keyword getTitleKeyword_3_0() { return cTitleKeyword_3_0; }

		//":"
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//title=STRING
		public Assignment getTitleAssignment_3_2() { return cTitleAssignment_3_2; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_3_2_0() { return cTitleSTRINGTerminalRuleCall_3_2_0; }

		//"header"
		public Keyword getHeaderKeyword_4() { return cHeaderKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//header=Boolean
		public Assignment getHeaderAssignment_6() { return cHeaderAssignment_6; }

		//Boolean
		public RuleCall getHeaderBooleanParserRuleCall_6_0() { return cHeaderBooleanParserRuleCall_6_0; }

		//"footer"
		public Keyword getFooterKeyword_7() { return cFooterKeyword_7; }

		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }

		//footer=Boolean
		public Assignment getFooterAssignment_9() { return cFooterAssignment_9; }

		//Boolean
		public RuleCall getFooterBooleanParserRuleCall_9_0() { return cFooterBooleanParserRuleCall_9_0; }

		//forms+=[FormTypes]*
		public Assignment getFormsAssignment_10() { return cFormsAssignment_10; }

		//[FormTypes]
		public CrossReference getFormsFormTypesCrossReference_10_0() { return cFormsFormTypesCrossReference_10_0; }

		//ID
		public RuleCall getFormsFormTypesIDTerminalRuleCall_10_0_1() { return cFormsFormTypesIDTerminalRuleCall_10_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class FormTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FormTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFormParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFormNewEntityOnlyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFormReportParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//FormTypes:
		//	Form | FormNewEntityOnly | FormReport;
		public ParserRule getRule() { return rule; }

		//Form | FormNewEntityOnly | FormReport
		public Alternatives getAlternatives() { return cAlternatives; }

		//Form
		public RuleCall getFormParserRuleCall_0() { return cFormParserRuleCall_0; }

		//FormNewEntityOnly
		public RuleCall getFormNewEntityOnlyParserRuleCall_1() { return cFormNewEntityOnlyParserRuleCall_1; }

		//FormReport
		public RuleCall getFormReportParserRuleCall_2() { return cFormReportParserRuleCall_2; }
	}

	public class FormElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Form");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFormKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cGetKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cGetAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cGetBooleanParserRuleCall_5_0 = (RuleCall)cGetAssignment_5.eContents().get(0);
		private final Keyword cPostKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cPostAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cPostBooleanParserRuleCall_8_0 = (RuleCall)cPostAssignment_8.eContents().get(0);
		private final Keyword cPutKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cPutAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cPutBooleanParserRuleCall_11_0 = (RuleCall)cPutAssignment_11.eContents().get(0);
		private final Keyword cDeleteKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cColonKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cDeleteAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cDeleteBooleanParserRuleCall_14_0 = (RuleCall)cDeleteAssignment_14.eContents().get(0);
		private final Assignment cEntityAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final CrossReference cEntityEntityCrossReference_15_0 = (CrossReference)cEntityAssignment_15.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_15_0_1 = (RuleCall)cEntityEntityCrossReference_15_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		
		//Form:
		//	"form" name=ID "{" "get" ":" get=Boolean "post" ":" post=Boolean "put" ":" put=Boolean "delete" ":" delete=Boolean
		//	entity=[Entity] "}";
		public ParserRule getRule() { return rule; }

		//"form" name=ID "{" "get" ":" get=Boolean "post" ":" post=Boolean "put" ":" put=Boolean "delete" ":" delete=Boolean
		//entity=[Entity] "}"
		public Group getGroup() { return cGroup; }

		//"form"
		public Keyword getFormKeyword_0() { return cFormKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"get"
		public Keyword getGetKeyword_3() { return cGetKeyword_3; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//get=Boolean
		public Assignment getGetAssignment_5() { return cGetAssignment_5; }

		//Boolean
		public RuleCall getGetBooleanParserRuleCall_5_0() { return cGetBooleanParserRuleCall_5_0; }

		//"post"
		public Keyword getPostKeyword_6() { return cPostKeyword_6; }

		//":"
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }

		//post=Boolean
		public Assignment getPostAssignment_8() { return cPostAssignment_8; }

		//Boolean
		public RuleCall getPostBooleanParserRuleCall_8_0() { return cPostBooleanParserRuleCall_8_0; }

		//"put"
		public Keyword getPutKeyword_9() { return cPutKeyword_9; }

		//":"
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }

		//put=Boolean
		public Assignment getPutAssignment_11() { return cPutAssignment_11; }

		//Boolean
		public RuleCall getPutBooleanParserRuleCall_11_0() { return cPutBooleanParserRuleCall_11_0; }

		//"delete"
		public Keyword getDeleteKeyword_12() { return cDeleteKeyword_12; }

		//":"
		public Keyword getColonKeyword_13() { return cColonKeyword_13; }

		//delete=Boolean
		public Assignment getDeleteAssignment_14() { return cDeleteAssignment_14; }

		//Boolean
		public RuleCall getDeleteBooleanParserRuleCall_14_0() { return cDeleteBooleanParserRuleCall_14_0; }

		//entity=[Entity]
		public Assignment getEntityAssignment_15() { return cEntityAssignment_15; }

		//[Entity]
		public CrossReference getEntityEntityCrossReference_15_0() { return cEntityEntityCrossReference_15_0; }

		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_15_0_1() { return cEntityEntityIDTerminalRuleCall_15_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
	}

	public class FormNewEntityOnlyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FormNewEntityOnly");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFormNewEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cEntityEntityCrossReference_3_0 = (CrossReference)cEntityAssignment_3.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_3_0_1 = (RuleCall)cEntityEntityCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FormNewEntityOnly:
		//	"formNewEntity" name=ID "{" entity=[Entity] "}";
		public ParserRule getRule() { return rule; }

		//"formNewEntity" name=ID "{" entity=[Entity] "}"
		public Group getGroup() { return cGroup; }

		//"formNewEntity"
		public Keyword getFormNewEntityKeyword_0() { return cFormNewEntityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//entity=[Entity]
		public Assignment getEntityAssignment_3() { return cEntityAssignment_3; }

		//[Entity]
		public CrossReference getEntityEntityCrossReference_3_0() { return cEntityEntityCrossReference_3_0; }

		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_3_0_1() { return cEntityEntityIDTerminalRuleCall_3_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class FormReportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FormReport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFormReportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFilterKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFilterAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFilterBooleanParserRuleCall_5_0 = (RuleCall)cFilterAssignment_5.eContents().get(0);
		private final Keyword cOrderKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cOrderAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cOrderBooleanParserRuleCall_8_0 = (RuleCall)cOrderAssignment_8.eContents().get(0);
		private final Keyword cPaginationKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cPaginationAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cPaginationBooleanParserRuleCall_11_0 = (RuleCall)cPaginationAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//FormReport:
		//	"formReport" name=ID "{" "filter" ":" filter=Boolean "order" ":" order=Boolean "pagination" ":" pagination=Boolean
		//	"}";
		public ParserRule getRule() { return rule; }

		//"formReport" name=ID "{" "filter" ":" filter=Boolean "order" ":" order=Boolean "pagination" ":" pagination=Boolean "}"
		public Group getGroup() { return cGroup; }

		//"formReport"
		public Keyword getFormReportKeyword_0() { return cFormReportKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"filter"
		public Keyword getFilterKeyword_3() { return cFilterKeyword_3; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//filter=Boolean
		public Assignment getFilterAssignment_5() { return cFilterAssignment_5; }

		//Boolean
		public RuleCall getFilterBooleanParserRuleCall_5_0() { return cFilterBooleanParserRuleCall_5_0; }

		//"order"
		public Keyword getOrderKeyword_6() { return cOrderKeyword_6; }

		//":"
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }

		//order=Boolean
		public Assignment getOrderAssignment_8() { return cOrderAssignment_8; }

		//Boolean
		public RuleCall getOrderBooleanParserRuleCall_8_0() { return cOrderBooleanParserRuleCall_8_0; }

		//"pagination"
		public Keyword getPaginationKeyword_9() { return cPaginationKeyword_9; }

		//":"
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }

		//pagination=Boolean
		public Assignment getPaginationAssignment_11() { return cPaginationAssignment_11; }

		//Boolean
		public RuleCall getPaginationBooleanParserRuleCall_11_0() { return cPaginationBooleanParserRuleCall_11_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	
	
	private final DomainmodelElements pDomainmodel;
	private final PackageDeclarationElements pPackageDeclaration;
	private final AbstractElementElements pAbstractElement;
	private final QualifiedNameElements pQualifiedName;
	private final ImportElements pImport;
	private final QualifiedNameWithWildcardElements pQualifiedNameWithWildcard;
	private final AbstractTypeElements pAbstractType;
	private final DataTypeElements pDataType;
	private final EntityElements pEntity;
	private final FeatureElements pFeature;
	private final BooleanElements pBoolean;
	private final PageElements pPage;
	private final FormTypesElements pFormTypes;
	private final FormElements pForm;
	private final FormNewEntityOnlyElements pFormNewEntityOnly;
	private final FormReportElements pFormReport;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ExtendedGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDomainmodel = new DomainmodelElements();
		this.pPackageDeclaration = new PackageDeclarationElements();
		this.pAbstractElement = new AbstractElementElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pImport = new ImportElements();
		this.pQualifiedNameWithWildcard = new QualifiedNameWithWildcardElements();
		this.pAbstractType = new AbstractTypeElements();
		this.pDataType = new DataTypeElements();
		this.pEntity = new EntityElements();
		this.pFeature = new FeatureElements();
		this.pBoolean = new BooleanElements();
		this.pPage = new PageElements();
		this.pFormTypes = new FormTypesElements();
		this.pForm = new FormElements();
		this.pFormNewEntityOnly = new FormNewEntityOnlyElements();
		this.pFormReport = new FormReportElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.example.domainmodel.Extended".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Domainmodel:
	//	"project" nomeProj=STRING "begin" elements+=AbstractElement* "end";
	public DomainmodelElements getDomainmodelAccess() {
		return pDomainmodel;
	}
	
	public ParserRule getDomainmodelRule() {
		return getDomainmodelAccess().getRule();
	}

	//PackageDeclaration:
	//	"package" name=QualifiedName "{" elements+=AbstractElement* "}";
	public PackageDeclarationElements getPackageDeclarationAccess() {
		return pPackageDeclaration;
	}
	
	public ParserRule getPackageDeclarationRule() {
		return getPackageDeclarationAccess().getRule();
	}

	//AbstractElement:
	//	PackageDeclaration | Entity | Import | Page | FormTypes;
	public AbstractElementElements getAbstractElementAccess() {
		return pAbstractElement;
	}
	
	public ParserRule getAbstractElementRule() {
		return getAbstractElementAccess().getRule();
	}

	//QualifiedName:
	//	ID ("." ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//Import:
	//	"import" importedNamespace=QualifiedNameWithWildcard;
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//QualifiedNameWithWildcard:
	//	QualifiedName ".*"?;
	public QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return pQualifiedNameWithWildcard;
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	//AbstractType:
	//	DataType | Entity;
	public AbstractTypeElements getAbstractTypeAccess() {
		return pAbstractType;
	}
	
	public ParserRule getAbstractTypeRule() {
		return getAbstractTypeAccess().getRule();
	}

	//DataType:
	//	name=("string" | "int" | "float" | "currency" | "date" | "time" | "boolean");
	public DataTypeElements getDataTypeAccess() {
		return pDataType;
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}

	//Entity:
	//	"entity" name=ID ("extends" superType=[Entity|QualifiedName])? "{" features+=Feature* "}";
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//Feature:
	//	(min=INT ".." max=INT)? name=ID ":" type=AbstractType;
	public FeatureElements getFeatureAccess() {
		return pFeature;
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}

	//Boolean:
	//	"true" | "false";
	public BooleanElements getBooleanAccess() {
		return pBoolean;
	}
	
	public ParserRule getBooleanRule() {
		return getBooleanAccess().getRule();
	}

	//Page:
	//	"page" name=ID "{" ("title" ":" title=STRING)? "header" ":" header=Boolean "footer" ":" footer=Boolean
	//	forms+=[FormTypes]* "}";
	public PageElements getPageAccess() {
		return pPage;
	}
	
	public ParserRule getPageRule() {
		return getPageAccess().getRule();
	}

	//FormTypes:
	//	Form | FormNewEntityOnly | FormReport;
	public FormTypesElements getFormTypesAccess() {
		return pFormTypes;
	}
	
	public ParserRule getFormTypesRule() {
		return getFormTypesAccess().getRule();
	}

	//Form:
	//	"form" name=ID "{" "get" ":" get=Boolean "post" ":" post=Boolean "put" ":" put=Boolean "delete" ":" delete=Boolean
	//	entity=[Entity] "}";
	public FormElements getFormAccess() {
		return pForm;
	}
	
	public ParserRule getFormRule() {
		return getFormAccess().getRule();
	}

	//FormNewEntityOnly:
	//	"formNewEntity" name=ID "{" entity=[Entity] "}";
	public FormNewEntityOnlyElements getFormNewEntityOnlyAccess() {
		return pFormNewEntityOnly;
	}
	
	public ParserRule getFormNewEntityOnlyRule() {
		return getFormNewEntityOnlyAccess().getRule();
	}

	//FormReport:
	//	"formReport" name=ID "{" "filter" ":" filter=Boolean "order" ":" order=Boolean "pagination" ":" pagination=Boolean
	//	"}";
	public FormReportElements getFormReportAccess() {
		return pFormReport;
	}
	
	public ParserRule getFormReportRule() {
		return getFormReportAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
