/**
 * generated by Xtext
 */
package org.example.domainmodel.generator;

import com.google.common.collect.Iterables;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IGenerator;
import org.example.domainmodel.extended.Domainmodel;
import org.example.domainmodel.generator.XmiExporter;

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
@SuppressWarnings("all")
public class ExtendedGenerator implements IGenerator {
  public void doGenerate(final Resource resource, final IFileSystemAccess fsa) {
    EList<EObject> _contents = resource.getContents();
    String _string = _contents.toString();
    System.out.println(_string);
    EList<EObject> _contents_1 = resource.getContents();
    Iterable<Domainmodel> _filter = Iterables.<Domainmodel>filter(_contents_1, Domainmodel.class);
    String _string_1 = _filter.toString();
    System.out.println(_string_1);
    EList<EObject> _contents_2 = resource.getContents();
    Iterable<Domainmodel> _filter_1 = Iterables.<Domainmodel>filter(_contents_2, Domainmodel.class);
    for (final Domainmodel n : _filter_1) {
      CharSequence _exportToXMI = XmiExporter.exportToXMI(n);
      fsa.generateFile("output.xmi", _exportToXMI);
    }
  }
}
