/*
* generated by Xtext
*/
grammar InternalExtended;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.example.domainmodel.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.example.domainmodel.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.example.domainmodel.services.ExtendedGrammarAccess;

}

@parser::members {
 
 	private ExtendedGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ExtendedGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDomainmodel
entryRuleDomainmodel 
:
{ before(grammarAccess.getDomainmodelRule()); }
	 ruleDomainmodel
{ after(grammarAccess.getDomainmodelRule()); } 
	 EOF 
;

// Rule Domainmodel
ruleDomainmodel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainmodelAccess().getGroup()); }
(rule__Domainmodel__Group__0)
{ after(grammarAccess.getDomainmodelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration 
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
(rule__PackageDeclaration__Group__0)
{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractElement
entryRuleAbstractElement 
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
(rule__AbstractElement__Alternatives)
{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getGroup()); }
(rule__DataType__Group__0)
{ after(grammarAccess.getDataTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeature
entryRuleFeature 
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureAccess().getGroup()); }
(rule__Feature__Group__0)
{ after(grammarAccess.getFeatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePage
entryRulePage 
:
{ before(grammarAccess.getPageRule()); }
	 rulePage
{ after(grammarAccess.getPageRule()); } 
	 EOF 
;

// Rule Page
rulePage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPageAccess().getGroup()); }
(rule__Page__Group__0)
{ after(grammarAccess.getPageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForm
entryRuleForm 
:
{ before(grammarAccess.getFormRule()); }
	 ruleForm
{ after(grammarAccess.getFormRule()); } 
	 EOF 
;

// Rule Form
ruleForm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormAccess().getGroup()); }
(rule__Form__Group__0)
{ after(grammarAccess.getFormAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AbstractElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractElementAccess().getPackageDeclarationParserRuleCall_0()); }
	rulePackageDeclaration
{ after(grammarAccess.getAbstractElementAccess().getPackageDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_1()); }
	ruleType
{ after(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getImportParserRuleCall_2()); }
	ruleImport
{ after(grammarAccess.getAbstractElementAccess().getImportParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getPageParserRuleCall_3()); }
	rulePage
{ after(grammarAccess.getAbstractElementAccess().getPageParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_0()); }
	ruleDataType
{ after(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getEntityParserRuleCall_1()); }
	ruleEntity
{ after(grammarAccess.getTypeAccess().getEntityParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Domainmodel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domainmodel__Group__0__Impl
	rule__Domainmodel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainmodelAccess().getProjectKeyword_0()); }

	'project' 

{ after(grammarAccess.getDomainmodelAccess().getProjectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domainmodel__Group__1__Impl
	rule__Domainmodel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainmodelAccess().getNomeProjAssignment_1()); }
(rule__Domainmodel__NomeProjAssignment_1)
{ after(grammarAccess.getDomainmodelAccess().getNomeProjAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domainmodel__Group__2__Impl
	rule__Domainmodel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainmodelAccess().getBeginKeyword_2()); }

	'begin' 

{ after(grammarAccess.getDomainmodelAccess().getBeginKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domainmodel__Group__3__Impl
	rule__Domainmodel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainmodelAccess().getElementsAssignment_3()); }
(rule__Domainmodel__ElementsAssignment_3)*
{ after(grammarAccess.getDomainmodelAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domainmodel__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainmodelAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getDomainmodelAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PackageDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__1__Impl
	rule__PackageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
(rule__PackageDeclaration__NameAssignment_1)
{ after(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__2__Impl
	rule__PackageDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__3__Impl
	rule__PackageDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_3()); }
(rule__PackageDeclaration__ElementsAssignment_3)*
{ after(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }

	'datatype' 

{ after(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
(rule__DataType__NameAssignment_1)
{ after(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }

	'entity' 

{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
(rule__Entity__NameAssignment_1)
{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_2()); }
(rule__Entity__Group_2__0)?
{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFeaturesAssignment_4()); }
(rule__Entity__FeaturesAssignment_4)*
{ after(grammarAccess.getEntityAccess().getFeaturesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Entity__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
(rule__Entity__SuperTypeAssignment_2_1)
{ after(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Feature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__0__Impl
	rule__Feature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getManyAssignment_0()); }
(rule__Feature__ManyAssignment_0)?
{ after(grammarAccess.getFeatureAccess().getManyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__1__Impl
	rule__Feature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getNameAssignment_1()); }
(rule__Feature__NameAssignment_1)
{ after(grammarAccess.getFeatureAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__2__Impl
	rule__Feature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getFeatureAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getTypeAssignment_3()); }
(rule__Feature__TypeAssignment_3)
{ after(grammarAccess.getFeatureAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Page__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__0__Impl
	rule__Page__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getPageKeyword_0()); }

	'page' 

{ after(grammarAccess.getPageAccess().getPageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__1__Impl
	rule__Page__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getNameAssignment_1()); }
(rule__Page__NameAssignment_1)
{ after(grammarAccess.getPageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__2__Impl
	rule__Page__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPageAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__3__Impl
	rule__Page__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getHeaderKeyword_3()); }

	'header' 

{ after(grammarAccess.getPageAccess().getHeaderKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__4__Impl
	rule__Page__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getPageAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__5__Impl
	rule__Page__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getSTRINGTerminalRuleCall_5()); }
	RULE_STRING
{ after(grammarAccess.getPageAccess().getSTRINGTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__6__Impl
	rule__Page__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getFooterKeyword_6()); }

	'footer' 

{ after(grammarAccess.getPageAccess().getFooterKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__7__Impl
	rule__Page__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getColonKeyword_7()); }

	':' 

{ after(grammarAccess.getPageAccess().getColonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__8__Impl
	rule__Page__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getSTRINGTerminalRuleCall_8()); }
	RULE_STRING
{ after(grammarAccess.getPageAccess().getSTRINGTerminalRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__9__Impl
	rule__Page__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getFormsAssignment_9()); }
(rule__Page__FormsAssignment_9)*
{ after(grammarAccess.getPageAccess().getFormsAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getPageAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Form__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Form__Group__0__Impl
	rule__Form__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getFormKeyword_0()); }

	'form' 

{ after(grammarAccess.getFormAccess().getFormKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Form__Group__1__Impl
	rule__Form__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getNameAssignment_1()); }
(rule__Form__NameAssignment_1)
{ after(grammarAccess.getFormAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Form__Group__2__Impl
	rule__Form__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getFormAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Form__Group__3__Impl
	rule__Form__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getIsShowKeyword_3()); }

	'isShow' 

{ after(grammarAccess.getFormAccess().getIsShowKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Form__Group__4__Impl
	rule__Form__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getFormAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Form__Group__5__Impl
	rule__Form__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getSTRINGTerminalRuleCall_5()); }
	RULE_STRING
{ after(grammarAccess.getFormAccess().getSTRINGTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Form__Group__6__Impl
	rule__Form__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getIsEditKeyword_6()); }

	'isEdit' 

{ after(grammarAccess.getFormAccess().getIsEditKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Form__Group__7__Impl
	rule__Form__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getColonKeyword_7()); }

	':' 

{ after(grammarAccess.getFormAccess().getColonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Form__Group__8__Impl
	rule__Form__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getSTRINGTerminalRuleCall_8()); }
	RULE_STRING
{ after(grammarAccess.getFormAccess().getSTRINGTerminalRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Form__Group__9__Impl
	rule__Form__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getEntitysAssignment_9()); }
(rule__Form__EntitysAssignment_9)*
{ after(grammarAccess.getFormAccess().getEntitysAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Form__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getFormAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

























rule__Domainmodel__NomeProjAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainmodelAccess().getNomeProjSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getDomainmodelAccess().getNomeProjSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainmodelAccess().getElementsAbstractElementParserRuleCall_3_0()); }
	ruleAbstractElement{ after(grammarAccess.getDomainmodelAccess().getElementsAbstractElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getElementsAbstractElementParserRuleCall_3_0()); }
	ruleAbstractElement{ after(grammarAccess.getPackageDeclarationAccess().getElementsAbstractElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__SuperTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_1_0()); }
(
{ before(grammarAccess.getEntityAccess().getSuperTypeEntityQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getEntityAccess().getSuperTypeEntityQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FeaturesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_4_0()); }
	ruleFeature{ after(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__ManyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getManyManyKeyword_0_0()); }
(
{ before(grammarAccess.getFeatureAccess().getManyManyKeyword_0_0()); }

	'many' 

{ after(grammarAccess.getFeatureAccess().getManyManyKeyword_0_0()); }
)

{ after(grammarAccess.getFeatureAccess().getManyManyKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getTypeTypeCrossReference_3_0()); }
(
{ before(grammarAccess.getFeatureAccess().getTypeTypeQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFeatureAccess().getTypeTypeQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getFeatureAccess().getTypeTypeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPageAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__FormsAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getFormsFormParserRuleCall_9_0()); }
	ruleForm{ after(grammarAccess.getPageAccess().getFormsFormParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Form__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFormAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Form__EntitysAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getEntitysEntityParserRuleCall_9_0()); }
	ruleEntity{ after(grammarAccess.getFormAccess().getEntitysEntityParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


